
type OhmieBalance @entity {
  id: ID!
  ohmie: Ohmie!
  sohmBalance: BigDecimal!
  ohmBalance: BigDecimal!
  bondBalance: BigDecimal!
  dollarBalance: BigDecimal!
  timestamp: BigInt!
}

type Ohmie @entity {
  id: ID!
  historicBalance: [OhmieBalance!]! @derivedFrom(field: "ohmie")
  lastBalance: OhmieBalance
  active: Boolean!
}

type Transaction @entity {
  id: ID!
  timestamp: BigInt!
  blockNumber: BigInt!
  blockHash: Bytes!
  from: Bytes!
  to: Bytes
  value: BigInt!
  gasUsed: BigInt!
  gasPrice: BigInt!
}

type Aux @entity {
  id: ID!
  value: BigInt!
}


type ContractInfo @entity {
  id: ID!
  name: String
  contract: String
  amount: BigDecimal
}

type Token @entity {
  id: ID!
}

type Rebase @entity {
  id: ID!
  transaction: String!
  amount: BigDecimal!
  stakedOhms: BigDecimal!
  percentage: BigDecimal!
  contract: String!
  timestamp: BigInt!
  value: BigDecimal!
}

